services:
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto_broker
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - mqtt_network

  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - ./mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
    - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
    - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    - MONGO_BACKEND_USER=${MONGO_BACKEND_USER}
    - MONGO_BACKEND_PASSWORD=${MONGO_BACKEND_PASSWORD}
    - MONGO_DATABASE=${MONGO_DATABASE}
    networks:
      - backend_network
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: golang_app
    environment:
      - MQTT_BROKER_ADDRESS=${MQTT_BROKER_ADDRESS}
      - JWT_KEY=${JWT_KEY}
      - MONGO_USER=${MONGO_BACKEND_USER}
      - MONGO_PASSWORD=${MONGO_BACKEND_PASSWORD}
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=${MONGO_DATABASE}
      - MONGO_AUTH_SOURCE=${MONGO_DATABASE}
    ports:
      - "${BACKEND_PORT}:8080"
    depends_on:
      - mongo
    networks:
      - backend_network
      - mqtt_network
    restart: always
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    container_name: nextjs_app
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - backend_network
    restart: always

networks:
  backend_network:
    driver: bridge 
  mqtt_network:
    driver: bridge